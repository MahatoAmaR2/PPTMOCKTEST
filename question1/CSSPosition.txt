Position property :- The CSS position property is used to specify where an element is displayed on the page. 
There are mainly five types:-
                            Static
                            relative
                            absolute
                            fixed
                            sticky

1:> Static:- This is the default value for elements. The element is positioned according to the normal flow of the document. The left, right, top, bottom and z-index properties do not affect an element with position: static.
Example:-
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Static</title>
    <style>
      .main-element {
        position: static;
        left: 10px;
        bottom: 10px;
        background-color: yellow;
        padding: 10px;
      }

      .sibling-element {
        padding: 10px;
        background-color: #f2f2f2;
      }
    </style>
  </head>
  <body>
    <div class="parent-element">
      <div class="sibling-element">I'm the other sibling element.</div>

      <div class="main-element">All eyes on me. I am the main element.</div>

      <div class="sibling-element">I'm the other sibling element.</div>
    </div>
  </body>
</html>

2:> relative :- Elements with position: relative remain in the normal flow of the document. But, unlike static elements, the left, right, top, bottom and z-index properties affect the position of the element. An offset, based on the values of left, right, top and bottom properties, is applied to the element relative to itself.
Example:-
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>relative</title>
    <style>
      .main-element {
        position: relative;
        left: 10px;
        bottom: 10px;
        background-color: yellow;
        padding: 10px;
      }
    </style>
  </head>
  <body>
    <div class="parent-element">
      <div class="sibling-element">I'm the other sibling element.</div>

      <div class="main-element">All eyes on me. I am the main element.</div>

      <div class="sibling-element">I'm the other sibling element.</div>
    </div>
  </body>
</html>

3:> absolute :- Elements with position: absolute are positioned relative to their parent elements. In this case, the element is removed from the normal document flow. The other elements will behave as if that element is not in the document. No space is created for the element in the page layout. The values of left, top, bottom and right determine the final position of the element.
Example:- 
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>absolute</title>
    <style>
      .main-element {
        position: absolute;
        left: 10px;
        bottom: 10px;
        background-color: yellow;
        padding: 10px;
      }

      .parent-element {
        position: relative;
        height: 100px;
        padding: 10px;
        background-color: #81adc8;
      }

      .sibling-element {
        background: #f2f2f2;
        padding: 10px;
        border: 1px solid #81adc8;
      }
    </style>
  </head>
  <body>
    <div class="parent-element">
      <div class="sibling-element">I'm the other sibling element.</div>

      <div class="main-element">All eyes on me. I am the main element.</div>

      <div class="sibling-element">I'm the other sibling element.</div>
    </div>
  </body>
</html>

4:> fixed :- Fixed position elements are similar to absolutely positioned elements. They are also removed from the normal flow of the document. But unlike absolutely positioned element, they are always positioned relative to the <html> element.
Example:- 
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>fixed</title>
    <style>
      .main-element {
        position: fixed;
        bottom: 10px;
        left: 10px;
        background-color: yellow;
        padding: 10px;
      }

      html {
        height: 800px;
      }
    </style>
  </head>
  <body>
    <div class="parent-element">
      <div class="sibling-element">I'm the other sibling element.</div>

      <div class="main-element">All eyes on me. I am the main element.</div>

      <div class="sibling-element">I'm the other sibling element.</div>
    </div>
  </body>
</html>

5:> sticky :- position: sticky is a mix of position: relative and position: fixed. It acts like a relatively positioned element until a certain scroll point and then it acts like a fixed element. Have no fear if you don't understand what this means, the example will help you to understand it better.
Example:-
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>sticky</title>
    <style>
      .main-element {
        position: sticky;
        top: 10px;
        background-color: yellow;
        padding: 10px;
      }

      .parent-element {
        position: relative;
        height: 800px;
        padding: 50px 10px;
        background-color: #81adc8;
      }
    </style>
  </head>
  <body>
    <div class="parent-element">
      <div class="sibling-element">I'm the other sibling element.</div>

      <div class="main-element">All eyes on me. I am the main element.</div>

      <div class="sibling-element">I'm the other sibling element.</div>
    </div>
  </body>
</html>
